<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find jackal_gazebo_rtab)/worlds/jackal_30x30_4.world" />

  <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
  <arg name="front_laser" default="false" />
  <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
  <arg name="default_config" value="base" unless="$(arg front_laser)" />
  <!-- end of hack -->
  <arg name="config" default="$(arg default_config)" /> <!-- aaron -->

  <!-- Configuration of Jackals which you would like to simulate.
       See jackal_description for details. -->
  <arg name="ns1"        default="jackal1"/>
  <arg name="ns2"        default="jackal2"/>
  <!--<arg name="ns3"        default="jackal3"/>
  <arg name="ns4"        default="jackal4"/>-->
  <arg name="config1"    default="base"/>    <!-- aaron -->
  <arg name="config1_id" default="1"/>
  <arg name="config2"    default="base"/>
  <arg name="config2_id" default="2"/>
  <!--<arg name="config3"    default="base"/>
  <arg name="config3_id" default="3"/>-->
  <!--<arg name="config4"    default="base"/>
  <arg name="config4_id" default="3"/>-->

  <arg name="j1_x_pos" default="-14.5"/>
  <arg name="j1_y_pos" default="14.5"/>
  <arg name="j1_z_pos" default="0"/>
  <arg name="j1_yaw"   default="4.71"/>
  <arg name="j2_x_pos" default="-13.5"/>
  <arg name="j2_y_pos" default="14.5"/>
  <arg name="j2_z_pos" default="0"/>
  <arg name="j2_yaw"   default="4.71"/>
  <!--<arg name="j3_x_pos" default="14"/>
  <arg name="j3_y_pos" default="-14"/>
  <arg name="j3_z_pos" default="0"/>
  <arg name="j3_yaw"   default="3.14"/>
  <arg name="j4_x_pos" default="-14"/>
  <arg name="j4_y_pos" default="14"/>
  <arg name="j4_z_pos" default="0"/>
  <arg name="j4_yaw"   default="0"/>-->

  <!-- Optionally enable teleop for the simulation -->
  <!-- <arg name="joystick" default="true" /> -->

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <!-- Spawn Jackal 1 -->
  <include file="$(find jackal_gazebo_rtab)/launch/spawn_multi_jackal.launch">
    <arg name="ns"  value="$(arg ns1)"/>
    <arg name="x" value="$(arg j1_x_pos)" />
    <arg name="y" value="$(arg j1_y_pos)" />
    <arg name="z" value="$(arg j1_z_pos)" />
    <arg name="yaw" value="$(arg j1_yaw)" />
    <arg name="config" value="$(arg config1)" />
  </include>
  <!-- <include file="$(find jackal_navigation_rtab)/launch/include/pointcloud_filter_jackal1.launch" />   aaron -->

   <!-- Process velodyne output to laser scan -->
   <!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" ns="$(arg ns1)">
        <remap from="cloud_in" to="/jackal1/velodyne_points"/>
        <remap from="scan" to="/jackal1/front/scan"/>
        <rosparam>
            transform_tolerance: 0.01
            min_height: -10.0
            max_height: 10.0

            angle_min: -3.1416
            angle_max: 3.1416
            angle_increment: 0.0087
            scan_time: 0.1
            range_min: 0.1
            range_max: 20.0
            use_inf: true
            concurrency_level: 0
        </rosparam>
  </node> -->



  <!-- Spawn Jackal 2 -->
  <include file="$(find jackal_gazebo_rtab)/launch/spawn_multi_jackal.launch">
    <arg name="ns"  value="$(arg ns2)"/>
    <arg name="x" value="$(arg j2_x_pos)" />
    <arg name="y" value="$(arg j2_y_pos)" />
    <arg name="z" value="$(arg j2_z_pos)" />
    <arg name="yaw" value="$(arg j2_yaw)" />
    <arg name="config" value="$(arg config2)" />
  </include>
  <!-- <include file="$(find jackal_navigation_rtab)/launch/include/pointcloud_filter_jackal2.launch" />   aaron -->


   <!-- Process velodyne output to laser scan -->
   <!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" ns="$(arg ns2)">
        <remap from="cloud_in" to="/jackal2/velodyne_points"/>
        <remap from="scan" to="/jackal2/front/scan"/>
        <rosparam>
            transform_tolerance: 0.01
            min_height: -10.0
            max_height: 10.0

            angle_min: -3.1416
            angle_max: 3.1416
            angle_increment: 0.0087
            scan_time: 0.1
            range_min: 0.1
            range_max: 20.0
            use_inf: true
            concurrency_level: 0
        </rosparam>
  </node> -->


  <!-- Spawn Jackal 3 -->
  <!--<include file="$(find jackal_gazebo_rtab)/launch/spawn_multi_jackal.launch">
    <arg name="ns"  value="$(arg ns3)"/>
    <arg name="x" value="$(arg j3_x_pos)" />
    <arg name="y" value="$(arg j3_y_pos)" />
    <arg name="z" value="$(arg j3_z_pos)" />
    <arg name="yaw" value="$(arg j3_yaw)" />
    <arg name="config" value="$(arg config3)" />
  </include>-->

  <!-- Spawn Jackal 4 -->
  <!--<include file="$(find jackal_gazebo_rtab)/launch/spawn_multi_jackal.launch">
    <arg name="ns"  value="$(arg ns4)"/>
    <arg name="x" value="$(arg j4_x_pos)" />
    <arg name="y" value="$(arg j4_y_pos)" />
    <arg name="z" value="$(arg j4_z_pos)" />
    <arg name="yaw" value="$(arg j4_yaw)" />
    <arg name="config" value="$(arg config4)" />
  </include>-->


<!--******************************-->
<!-- Debugging tools -->
<!--******************************-->

<node name="rviz" pkg="rviz" type="rviz" args="-d $(find jackal_viz_rtab)/rviz/two_jackal_global.rviz"/>
<!--<node name="rviz1" pkg="rviz" type="rviz" args="-d $(find jackal_viz_rtab)/rviz/jackal1_map.rviz"/>
<node name="rviz2" pkg="rviz" type="rviz" args="-d $(find jackal_viz_rtab)/rviz/jackal2_map.rviz"/>-->
<!-- <node name="rqt_topic" pkg="rqt_topic" type="rqt_topic" output="screen" /> -->
<!-- <node name="rqt_graph" pkg="rqt_graph" type="rqt_graph" output="screen" />
<node name="rqt_tf_tree" pkg="rqt_tf_tree" type="rqt_tf_tree" output="screen" /> -->

</launch>