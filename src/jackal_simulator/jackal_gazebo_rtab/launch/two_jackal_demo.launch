<?xml version="1.0"?>

<!-- Launches Jackal Gazebo simulation in an empty world. -->

<launch>
  <arg name="gui"        default="true"/>
  <arg name="rviz"       default="true"/>
  <arg name="ns0"        default="jackal0"/>
  <arg name="ns1"        default="jackal1"/>
  <arg name="ns2"        default="jackal2"/>
  <arg name="config0"    default="base"/>
  <arg name="config0_id" default="0"/>
  <arg name="config1"    default="base"/>
  <arg name="config1_id" default="1"/>
  <arg name="config2"    default="base"/>
  <arg name="config2_id" default="0"/>
  <arg name="world"      default="stuff.world"/>
  
  <!-- Start Gazebo with an empty world. -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="$(arg gui)"/>	
    <arg name="world_name"   value="$(find multi_jackal_tutorials)/worlds/$(arg world)"/>
  </include>
  
  <include file="$(find multi_jackal_base)/launch/jackal_base.launch">
    <arg name="ns"            value="$(arg ns1)"/>
    <arg name="config"        value="$(arg config1)"/>
    <arg name="config_id"     value="$(arg config1_id)"/>
    <arg name="use_move_base" value="true"/>
    <arg name="x"             value="5"/>
  </include>

  <!-- <group ns="$(arg ns1)">
    <include file="$(find jackal_navigation_rtab)/launch/include/pointcloud_filter_jackal1.launch" /> 
  </group> -->

  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" ns="$(arg ns1)">
        <remap from="cloud_in" to="/jackal1/velodyne_points"/>
        <remap from="scan" to="/jackal1/front/scan"/>
        <rosparam>
            transform_tolerance: 0.01
            min_height: -1.0
            max_height: 1.0

            angle_min: -3.1416
            angle_max: 3.1416
            angle_increment: 0.0087
            scan_time: 0.1
            range_min: 0.1
            range_max: 20.0
            use_inf: true
            concurrency_level: 0
        </rosparam>
  </node>

  <group ns="$(arg ns1)">
    <include file="$(find jackal_navigation_rtab)/launch/include/gmapping_jackal1.launch"/>
  </group>

  
  <include file="$(find multi_jackal_base)/launch/jackal_base.launch">
    <arg name="ns"            value="$(arg ns2)"/>
    <arg name="config"        value="$(arg config2)"/>
    <arg name="config_id"     value="$(arg config2_id)"/>
    <arg name="use_move_base" value="true"/>
    <arg name="x"             value="0"/>
    <arg name="y"             value="3"/>
    <arg name="yaw"           value="-1.57"/>
  </include>
  
  <group ns="$(arg ns2)">
    <!-- <include file="$(find jackal_navigation_rtab)/launch/include/pointcloud_filter_jackal2.launch" /> -->
    <include file="$(find jackal_navigation_rtab)/launch/include/gmapping_jackal2.launch"/>
  </group>

  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" ns="$(arg ns2)">
        <remap from="cloud_in" to="/jackal2/velodyne_points"/>
        <remap from="scan" to="/jackal2/front/scan"/>
        <rosparam>
            transform_tolerance: 0.01
            min_height: -1.0
            max_height: 1.0

            angle_min: -3.1416
            angle_max: 3.1416
            angle_increment: 0.0087
            scan_time: 0.1
            range_min: 0.1
            range_max: 20.0
            use_inf: true
            concurrency_level: 0
        </rosparam>
  </node>

  <include file="$(find jackal_navigation_rtab)/launch/include/multi_jackal_mapmerge.launch">
    <arg name="move_forward_only" value="false"/>
    <arg name="j1" value="$(arg ns1)"/>
    <arg name="j2" value="$(arg ns2)"/>
    <!-- <arg name="j3" value="$(arg j3)"/> -->
    <arg name="j1_x_pos" value="5"/>
    <arg name="j1_y_pos" value="0"/>
    <arg name="j1_z_pos" value="0"/>
    <arg name="j1_yaw"   value="0"/>
    <arg name="j2_x_pos" value="0"/>
    <arg name="j2_y_pos" value="3"/>
    <arg name="j2_z_pos" value="0"/>
    <arg name="j2_yaw"   value="-1.57"/>
  </include>


  <!-- View in RVIZ. -->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find jackal_viz_rtab)/rviz/two_jackal_map.rviz" >
      <remap from="/move_base_simple/goal" to="/$(arg ns2)/move_base_simple/goal"/>
    </node>
  </group>
  <node name="rqt_tf_tree" pkg="rqt_tf_tree" type="rqt_tf_tree" output="screen" />
</launch>
